{
    "name": "monolith-single-deployment",

    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            // Update the VARIANT arg to pick a Java version: 11, 17
            // Append -bullseye or -buster to pin to an OS version.
            // Use the -bullseye variants on local arm64/Apple Silicon.
            "VARIANT": "17"
        }
    },

    // according to https://github.com/devcontainers/images/tree/main/src/java
    "features": {
        "ghcr.io/devcontainers/features/java:1": {
            "version": "17",
			"jdkDistro": "tem",
            "installGradle": "false",
            "installMaven": "true",
            "mavenVersion": "3.9.4"
        },
        "ghcr.io/devcontainers/features/node:1": {
			"version": "18"
		},
        "ghcr.io/devcontainers/features/git:1": {}
    },

    "customizations": {
        "vscode": {
            
            // Set *default* container specific settings.json values on container create.
            "settings": {},
            
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
				"dbaeumer.vscode-eslint",
				"amodio.tsl-problem-matcher",
				"ms-vscode.vscode-typescript-next",
                "ms-azuretools.vscode-docker",
                "vscjava.vscode-java-pack",
                "maptz.camelcasenavigation",
                "alphabotsec.vscode-eclipse-keybindings",
				"spmeesseman.vscode-taskexplorer",
				"yzhang.markdown-all-in-one"
            ]
        }
    },

    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    "forwardPorts": [3000, 8080, 8181, 8282],
    
    // Connect as root instead of a custom user https://aka.ms/vscode-remote/containers/non-root.
    // Necessary to get the maven build working
    "remoteUser": "root",

	// Use 'postCreateCommand' to run commands after the container is created.
	// Happens after updateContentCommand and once the dev container has been assigned to a user for the first time.
    // install code generator for vs code, theia extensions, theia plugins and install the dependencies
	// need to be done here and not in the Dockerfile, because npm is installed via the features and therefore not yet available in the Docker process
	"postCreateCommand": "chmod 777 ./.devcontainer/postCreate.sh; ./.devcontainer/postCreate.sh"

    // Runs each time the container is successfully started
	// Starts the trace compass server. Downloads the server if not yet available.
	// "postStartCommand": "nohup bash -c 'yarn browser:start &'"
}
